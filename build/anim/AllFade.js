// Generated by CoffeeScript 1.9.0
(function() {
  var AllFade,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  AllFade = (function() {
    AllFade.prototype.config = {
      pixelsPerStrip: 64,
      numberOfStrips: 48,
      fps: 100,
      from: 0,
      to: 255,
      duration: 0.65
    };

    function AllFade(opts) {
      this.time2color = __bind(this.time2color, this);
      this.draw = __bind(this.draw, this);
      var key, val;
      for (key in opts) {
        val = opts[key];
        this.config[key] = val;
      }
      this.Ledscape = require("../ledscape");
      this.Color = this.Ledscape.color();
      this.frame0 = true;
      this.Ledscape.init(this.config.pixelsPerStrip, this.config.numberOfStrips);
    }

    AllFade.prototype.fade = function(_at_cb) {
      this.cb = _at_cb;
      this.start = new Date().getTime();
      this.done = Math.round(this.config.duration * 1000);
      this.range = Math.abs(this.config.to - this.config.from);
      this.dir = this.config.from > this.config.to ? -1 : 1;
      this.interval = Math.round(1000.0 / this.config.fps);
      this.timer = setInterval(this.draw, this.interval);
      return this.draw();
    };

    AllFade.prototype.draw = function() {
      var framenum, rgb, _ref, _ref1;
      rgb = this.time2color();
      if (!rgb) {
        return this.cb();
      }
      framenum = (_ref = this.frame0) != null ? _ref : {
        0: 1
      };
      (_ref1 = this.Ledscape).fillColor.apply(_ref1, [framenum].concat(__slice.call(rgb)));
      this.Ledscape.draw(framenum);
      return this.frame0 = !this.frame0;
    };

    AllFade.prototype.time2color = function() {
      var color, elapsed, ratio;
      elapsed = new Date().getTime() - this.start;
      color = new this.Color('#22ff66');
      if (elapsed >= this.done) {
        clearInterval(this.timer);
        return false;
      }
      ratio = (elapsed * 1.0) / (this.done * 1.0);
      color.rotate(180.0 * ratio).saturate(ratio).whiten(ratio);
      return color.rgbArray();
    };

    return AllFade;

  })();

  module.exports = AllFade;

}).call(this);
